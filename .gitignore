# 依赖
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# 构建输出
dist/
dist-ssr
*.local
build/

# 开发构建
dist-dev/

# 环境变量文件
# 注意：Vite项目的环境变量文件通常可以提交（因为是前端公开配置）
# 但包含敏感信息的应该忽略
.env.local
.env.development.local
.env.test.local
.env.production.local
# .env.development 和 .env.production 根据项目需要决定是否提交

# 编辑器目录和文件
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# 日志
logs/
*.log

# 运行时数据
pids
*.pid
*.seed
*.pid.lock

# 覆盖率目录
coverage/
*.lcov

# nyc 测试覆盖率
.nyc_output

# 依赖锁定文件
# 注意: 通常建议保留 package-lock.json 或 yarn.lock
# package-lock.json

# 可选npm缓存目录
.npm

# 可选eslint缓存
.eslintcache

# Microbundle缓存
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# 可选REPL历史
.node_repl_history

# TypeScript 缓存
*.tsbuildinfo

# 可选npm配置文件
.npmrc

# Yarn 完整性文件
.yarn-integrity

# parcel-bundler缓存
.cache/
.parcel-cache/

# Vite特定
vite.config.js.timestamp-*
vite.config.ts.timestamp-*

# 临时文件夹
tmp/
temp/

# OS生成的文件
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Next.js构建输出
.next

# Nuxt.js构建/生成输出
.nuxt
dist

# Gatsby文件
.cache/
public

# Storybook构建输出
.out
.storybook-out

# 临时文件夹
tmp/
temp/

# Vite
vite.config.js.timestamp-*
vite.config.ts.timestamp-*

# OS生成的文件
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db 